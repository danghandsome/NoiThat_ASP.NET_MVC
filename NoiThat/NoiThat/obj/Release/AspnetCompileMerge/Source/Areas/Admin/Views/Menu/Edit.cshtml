@model NoiThat.Models.Menu

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm("Edit", "Menu", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.TypeMenu)
    @Html.HiddenFor(model => model.TableId)



    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Main content -->
        <section class="content my-2">

            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-6">
                            <strong class="text-danger text-uppercase">CẬP NHẬT MENU</strong>
                        </div>
                        <div class="col-6 text-right">
                            <a href="@Url.Action("Index","Menu")" class="btn btn-sm btn-info"><i class="fa fa-backward"></i> Về danh sách</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-9">
                            @if (Model.TypeMenu.Equals("custom"))
                            {

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name)
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Link)
                                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                                </div>
                            }
                            else
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name)
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Link)
                                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                                </div>
                            }



                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Position)
                                @Html.DropDownListFor(model => model.Position, new[] { new SelectListItem { Text = "Main Menu", Value = "mainmenu" }, new SelectListItem { Text = "Footer Menu", Value = "footermenu" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">

                                <label>Danh mục cha</label>
                                @Html.DropDownListFor(model => model.ParentId, (SelectList)ViewBag.ListMenu,"", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Sắp xếp</label>
                                @Html.DropDownListFor(model => model.Orders, (SelectList)ViewBag.ListOrder,"", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Orders, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Trạng thái</label>
                                @Html.DropDownListFor(model => model.Status, new[] { new SelectListItem { Text = "Không có", Value = "2" }, new SelectListItem { Text = "Có", Value = "1" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <button class="btn btn-sm btn-success" type="submit" name="update"><i class="fa fa-save"></i> Cập nhật</button>

                </div>
            </div>
            <!-- /.card -->
        </section>
        <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->

}




